d3
d3[]
dim(d3[])
d3[,,1]
d3[1,,]]
d3[1,,]
dim(d3)
readDataAsVector
readDataAsVector(d3)
x  = readDataAsVector(d3)
dim(x) <- c(9, 7, 3)
x
x[,,1]
x[]
dim(x[])
debug(rev)
c
c
c
c
c
c
dim(d3)
d3@.data
dim(d3)
d3@.data
d3@.data$.data
d3@.data$datta
d[]
d3[]
d3[,,]
d3[,1,]
d3[1,,]
d3@.data$.data
dim(d3@.data$.data)
d3[,,]
d3[1,,]
n
debug(.internalSlice)
x
i
missing(i)
missing(j)
missing(...)
missing(drop)
n
n
n
n
n
n
dim(x)
missing(i)
missing(j)
missing(...)
missing(drop)
drop
dim(d)
d[]
d[i,j,...]
d[i,j,]
d[i,j,...,drop = TRUE]
missing(...)
d[i, j, drop = drop]
d[i, j, ]
d[i, j, , drop = drop]
d[i, j, ..., drop = drop]
missing(...)
d
d[i, j, ..., drop = drop]
d[i, j, , drop = drop]
?"..."
help.search("...")
?missing
substitute(...)
d[i,j,NULL]
d[i,j,]
d3
d3[,,]
dim(d3[,,])
d3@.data$.data
dim(d3@.data$.data)
d3
d3
d3[,,]
dim(d3[,,])
dim(d3[1,,])
d3[1,,]
dim(d3[1,,])
d3[1,,]
d3[,,1]
dim(d3)
d3[1,,1]
d3
d3[]
d3@.data$.data
d3@.data$.data[]
d3[]
traceback()
d3M[,,]
?array
?aperm
 d3
 d3[]
 d3[,,]
aperm( d3[,,], rev(dim(d3)))
aperm( d3[,,], perm = rev(dim(d3)))
?aperm
aperm( d3[,,] )
d3[1,,]
d3[,,1]
aperm(d3[,,1])
dim(d3[,,1])
aperm(drop(d3[,,1]))
drop(d3[,,1])
dim(d[1:10,]
)
dim(d)
dim(d)
dim(d[1:10,])
dim(d[1:10,1])
dim(d[1:10,1:2])
d@.data
d@.data$.data
dim(d@.data$.data)
d[1:10, ]
d[1:10, ] = d[1:10, 1:10]
d[1:10, ] == d[1:10, 1:10]
d3
d2
d2
d2[]
d3[,,]
d3M[]
d3@.data$.data
d3@.data$.data[,,1]
Internal
internal
?Internal
?internal
?copy
.Internal
?.Internal
.Internal(rnorm(100))
.Internal(rnorm)
.Machine
d3
d3[]
d3[,,]
?missing
