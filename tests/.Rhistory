ds9[ , , 2:1, 2:1, , ]
n
kall
dims
dims
kall
sapply(kall, class)
Q
ds9[ , , , 2:1, 2:1 ]
kall
dims
Q
ds9[ , , 1:2, 1:2, ])
ds9[ , , 1:2, 1:2, ]
c
c
dim(ds9[ , , 1:2, 1:2, ])
c
c
TH(action='print')
id9[1,1,1,1,1, drop=FALSE]
ds9[1,1,1,1,1,drop=FALSE]
TH(action='print')
source("/home/NANOFLUIDICS/jbullard/projects/software/R/common/h5r/tests/testall.R")
listH5Contents()
listH5Contents(f)
length(listH5Contents(f))
TH(action='print')
TH(action='print')
listH5Contents(g)
length(listH5Contents(g))
TH(action='print')
TH(action='print')
g
h5Exists(g, "ds_1")
g
h5Exists(g, "ds_2")
h5Exists(g, "ds_1")
g
listH5Contents(g)
h5Exists(g, "ds_1")
h5Exists(g, "ds_1")
h5Exists(g, "ds_1")
h5Exists(g, "ds_1")
h5Exists(g, "ds_1")
h5Exists(g, "ds_323432")
ls9)
ls()
f
h5Exists(g, "group_1")
listH5Contents(f)
h5Exists(g, "ds_1")
h5Exists(g, "group_1")
h5r:::.listH5Contents
h5r:::.listH5Contents(f)
sapply(h5r:::.listH5Contents(f), "[[", 1)
h5Exists(g, "group_1")
h5Exists(g, "group_1")
h5Exists(f, "group_1")
h5Exists(f, "group_1")
h5Exists(f, "group_1")
h5Exists(f, "group_3")
h5Exists(g, "group_3")
h5Exists(g, "ds_1")
h5Exists(g, "ds_sdf1")
TH(action='print')
ds7
dim(ds7)
c(c(1,1,1), dim(ds7))
cbind(c(1,1,1), dim(ds7))
hSlab(cbind(c(1,1,1), dim(ds7)))
apply((cbind(c(1,1,1), dim(ds7))), runif)
apply((cbind(c(1,1,1), dim(ds7))), 1, function(b) runif(1, b[1], b[2]))
floor(apply((cbind(c(1,1,1), dim(ds7))), 1, function(b) runif(1, b[1], b[2])))
floor(apply((cbind(c(1,1,1), dim(ds7))), 1, function(b) { a <- runif(1, b[1], b[2]); a + floor(runif(1, a, b[2])) })
)
floor(apply((cbind(c(1,1,1), dim(ds7))), 1, function(b) { a <- runif(1, b[1], b[2]); c(a, a + floor(runif(1, a, b[2]))) }))
t(floor(apply((cbind(c(1,1,1), dim(ds7))), 1, function(b) { a <- runif(1, b[1], b[2]); c(a, a + floor(runif(1, a, b[2]))) })))
m
traceback()
m
m
m
m
apply(m, 2, diff)
TH(action='print')
TH(action='print')
m
ds7[m[1,1]:m[2,1],
                m[1,2]:m[2,2],
                m[1,3]:m[2,3]]
)
)
)
TH(action='print')
TH(action='print')
TH(action='print')
ds2
ds2[]
dim(ds2[])
ds3[]
ds4
ds5
ds6
ds6[]
class(ds6[])
ds2
class(ds2[])
ds2[]
drop(ds2[])
class(drop(ds2[]))
unclass(drop(ds2[]))
class(unclass(drop(ds2[])))
class(drop(ds2[]))
class(ds2[1:10])
aperm(ds2[1:10])
class(aperm(ds2[1:10]))
class(aperm(ds1[1:10,1]))
ds1[1:10,1]
class(ds1[1:10,1])
ds1[1:10,1]
ds1[1:10]
ds2
ds2[]
class(ds2[])
class(ds2[1:10])
class(aperm(ds2[1:10]))
ds1[1:10]
ds1[1:10,1]
class(ds1[1:10,])
ds7
ds7[1:2,1:2,1:2]
class(ds7[1:2,1:2,1:2])
?arrau
?array
dim(ds2)
ds2
dim(ds2[])
dim(ds2[1:10])
dim(drop(ds2[1:10]))
dim(as.vector(ds2[]))
as.vector(ds2[])
dim(ds1[])
dim(ds3[])
class(ds3[])
TH(action='print')
ds2
ds2[]
dim(ds2[])
dim(ds2)
